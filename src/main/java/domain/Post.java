package domain;

import java.awt.*;

public class Post {
    private int idUser; // id просматривающего страницу
    private int urlPost; // ссылка на определенную запись, пост
    private int idOwner; // владелец поста (название сообщества или пользователь)
    private int adminWriter; // если сообщество, то в публикации можно указывать авторство с ссылкой)

    private String nameCommunity; //название сообщества (или имя автора поста) с постом
    private int publicationDate; // дата публикации
    private String heading; // заголовок
    private String text; //сам пост и его содержание
    private String buttonRead; // кнопка читать (для того что бы текст развернуть)
    private Image img; // картинка в посте

    private int amountLikesInfo; //количество лайков
    private boolean statusLike; //нравится ли владельцу аккаунта, под которым смотрим пост
    private String personLikesInfo; // каким людям понравилось
    private String friendsLikesInfo; //каким друзьям понравился пост
    private String emoji; //(вместо лайка можно выбрать реакцию)

    private int amountView; // количество просмотров

    private int amountRepostsInfo;
    private boolean statusRepost;
    private String personRepostsInfo;
    private String friendsRepostsInfo;

    private boolean fixedPost; //закреплена ли запись

    private int threeDots;
    private int notInteresting;
    private int saveTab;
    private int complainPost;
    private int informPostsInfo;



    private CommentsInfo commentsInfo;

// то что не учла
    // не разделила эти понятия
    //from_id 	Идентификатор автора записи (от чьего имени опубликована запись).
    //created_by    Идентификатор администратора, который опубликовал запись (возвращается только для сообществ при запросе с ключом доступа администратора). Возвращается в записях, опубликованных менее 24 часов назад.
    // если поделиться записью на своей стене и что то написать к ней например, если правильно поняла, давно так не делала, поэтому и не учла что запись может быть репостнутой с группы например))
    // reply_owner_id Идентификатор владельца записи, в ответ на которую была оставлена текущая.
    //reply_post_id Идентификатор записи, в ответ на которую была оставлена текущая.
    //не особо вникала ранее, когда делала посты и эту функцию не использовала, при выполнении задания не создавала пост а рассматривала существующий
    // friends_only integer, [1]	 если запись была создана с опцией «Только для друзей».
    //видимо не самым внимательным образом делаю домашку, раз не протестила и не просканировала все возможности
    //groups_can_post (integer, [0,1]) — информация о том, могут ли сообщества комментировать запись;
    //can_close(boolean) — может ли текущий пользователь закрыть комментарии к записи;
    //can_open(boolean) — может ли текущий пользователь открыть комментарии к записи.

    //Источник материала, объект с полями:
    //link* (string);
    //name* (string);
    //type* (string).

    //can_publish* (integer, [0,1]) — информация о том, может ли текущий пользователь сделать репост записи (1 — может, 0 — не может).

    //Тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest.

    //Ну почти, не продумала все сценарии, а только кноку читать и картинку
    //Медиавложения записи (фотографии, ссылки и т.п.). Описание массива attachments находится на отдельной странице.
    //Информация о местоположении , содержит поля:
    //type (string) — тип места;
    //coordinates (string) — координаты места;
    //place (object) — описание места (если оно добавлено). Объект места.

    //can_pin
    //integer, [0,1]	Информация о том, может ли текущий пользователь закрепить запись (1 — может, 0 — не может).
    //can_delete
    //integer, [0,1]	Информация о том, может ли текущий пользователь удалить запись (1 — может, 0 — не может).
    //can_edit
    //integer, [0,1]	Информация о том, может ли текущий пользователь редактировать запись (1 — может, 0 — не может).

    //о рекламе тоже не подумала)))
    //marked_as_ads integer, [0,1]	Информация о том, содержит ли запись отметку "реклама" (1 — да, 0 — нет).
    // почти только у меня добавить в закладки private int saveTab;
    //is_favorite  boolean	true, если объект добавлен в закладки у текущего пользователя.

    //donut
    //object	Информация о записи VK Donut:
    //is_donut (boolean) — запись доступна только платным подписчикам VK Donut;
    //paid_duration (integer) — время, в течение которого запись будет доступна только платным подписчикам VK Donut;
    //placeholder (object) — заглушка для пользователей, которые не оформили подписку VK Donut. Отображается вместо содержимого записи.
    //can_publish_free_copy (boolean) — можно ли открыть запись для всех пользователей, а не только подписчиков VK Donut;
    //edit_mode (string) — информация о том, какие значения VK Donut можно изменить в записи. Возможные значения:
    //all — всю информацию о VK Donut.
            //duration — время, в течение которого запись будет доступна только платным подписчикам VK Donut.
            //postponed_id

    //об этом думала, но это отображается при создании записи, а я рассматривала уже существующий пост
    //integer	Идентификатор отложенной записи. Это поле возвращается тогда, когда запись стояла на таймере.

    //Видимо я мало заню о функциях vk
    //type string	Тип источника. Возможные значения:
    //vk — Запись создана через основной интерфейс сайта (http://vk.com/);
    //widget — Запись создана через виджет на стороннем сайте;
    //api — Запись создана приложением через API;
    //rss — Запись создана посредством импорта RSS-ленты со стороннего сайта;
    //sms — Запись создана посредством отправки SMS-сообщения на специальный номер.

    //пока листала с компа ленту не встретила эти обозначения и при просмотре свои же постов, опубликованных с телефона не встретила обозначение, встречается когда в сообщениях показывает когда последний раз был в сети и с какого устройства
    //platform string	Название платформы, если оно доступно. Возможные значения:
    //android;
    //iphone;
    //wphone.

    //data string	Тип действия (только для type = vk или widget). Возможные значения:
    //profile_activity — Изменение статуса под именем пользователя (для type = vk);
    //profile_photo — Изменение профильной фотографии пользователя (для type = vk);
    //comments — Виджет комментариев (для type = widget);
    //like — Виджет «Мне нравится» (для type = widget);
    //poll — Виджет опросов (для type = widget);

    //url string	URL ресурса, с которого была опубликована запись


}
